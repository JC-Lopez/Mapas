## EN ELABORACION


# datos: https://raw.githubusercontent.com/JC-Lopez/Mapas/master/Datos%20AT%202014

# ========================================================
# Mapa a partir del SHP Provincias_ETRS89_30N
# ========================================================

# Fuente mapa: http://www.arcgis.com/home/item.html?id=83d81d9336c745fd839465beab885ab7
# Ver https://github.com/dppascual/Data_Preparation_in_R/blob/master/ClassS4_maps/mapas.Rmd


setwd("C:/workdir/mapas_rgdal")

# Carga de librerias necesarias
library(rgdal)  #S
library(ggplot2)  #S
library(rgeos)      # sin cargar
library(maptools)   # sin cargar
library(ggmap)
library(sp)
library(rgdal)       # sin cargar
library(RColorBrewer)

# mapa fuente: Provincias_ETRS89_30N



# -----------------------------------------------------
# Lectura del mapa
# -----------------------------------------------------

# Extraer todos los ficheros del zip "Provincias_ETRS89_30N.zip"

mapa<-readOGR(dsn="C:/workdir/mapas_rgdal", "Provincias_ETRS89_30N")

# Examinar los objetos

ogrInfo(".", "Provincias_ETRS89_30N")
# "." es una forma abrebiada de indicar el wd


class(mapa)
## [1] "SpatialPolygonsDataFrame"
## attr(,"package")
## [1] "sp"

names(mapa)
# Muestra los nombres de las columnas del objeto
## [1] "Codigo"    "Texto"     "Texto_Alt" "Cod_CCAA"  "CCAA" 

head(mapa@data, n=2)
# Muestra 2 registros de las 5 columnas.

##   Codigo    Texto  Texto_Alt  Cod_CCAA             CCAA
## 0     01   Ãlava      Araba       16          PaÃ�s Vasco

# Codigo es el id de cada provincia y cod_CCAA de las com. autónomas.

slotNames(mapa)
## [1] "data" "polygons" "plotOrder" "bbox" "proj4string"

# se puede extraer la información de cada slot con, por ejemplo
mapaData <- mapa@data  (genera una tabla con los valores de las 5 columnas)

# Se graba en un fichero, si hace falta, para futuras operaciones
write.table(mapaData, file = "datosmapa.csv", sep = ";", col.names = NA, qmethod = "double")

summary(mapa)
# Hay información sobre las coordenadas max. y min. y el sistema de proyección

plot(mapa)
# Vemos el mapa

mapa2<-fortify(mapa, region="Codigo")
# Preparamos el mapa para recibir los datos
# El argumento "región" determina el objeto que va recibir datos

names(mapa2)

## [1] "long"  "lat"   "order" "hole"  "piece" "group" "id"  

tail(mapa2)

##        long     lat order  hole piece group id
##  1 497823.7 4784874     1 FALSE     1  01.1 01
##  2 498456.8 4784220     2 FALSE     1  01.1 01
##  3 498532.3 4783866     3 FALSE     1  01.1 01
##  4 498382.2 4783793     4 FALSE     1  01.1 01
##  5 498945.7 4783509     5 FALSE     1  01.1 01
##  6 499045.7 4782937     6 FALSE     1  01.1 01

# Ahora tenemos a la vista las coordenadas de cada provincia

summary(mapa2)




# -----------------------------------------------------
# Carga datos AT 2014
# -----------------------------------------------------

Datos_AT_2014 <- read.delim("C:/workdir/mapas_rgdal/Datos_AT_2014.txt", sep=";", header=F)

# El fichero ha sido descargado de la web de la Seg. Social y preparado a mano
#   - Se han reescrito los nombres de las provincias
#   - Añadido un campo ID coincidente con el del mapa
#   - calculado la incidencia anual y la tasa de absentismo
#   - ATENCION: contiene datos tanto de las provincias como de las CCAA:
#              - Tipo A: CCAA
#              - Tipo P: Provincias
#   - Lo del encoding....
#   - Se ha importado usando la opción del menú, con la opción "encabezados" desactivada
#   - Es la única manera de que mantenga el formato 01 y no lo pase como 1, etc

# Hay que 
#  1. Eliminar la actual fila de nombres
#  2. Añadir la fila con los nombres

# Quitar la cabecera original (primero he mirado que hay en total 72 filas. Se puede automatizar)
Datos_AT_2014<-Datos_AT_2014[2:72, ]

# Crear la cabecera
cabeceras<-c("Tipo", "Codigo", "AMBITO GEOGRAFICO", "provincia", "Etiqueta1", "cod", "INC", "ABS")

# Incorporar la cabecera a los datos
names(Datos_AT_2014)<-cabeceras

# Asignar un formato numérico a las variables numéricas
Datos_AT_2014$INC<-as.numeric(as.character(Datos_AT_2014$INC))
Datos_AT_2014$ABS<-as.numeric(as.character(Datos_AT_2014$ABS))

# Extraer los datos de las PROVINCIAS
Datos_AT_Provincias_2014<-Datos_AT_2014[Datos_AT_2014$Tipo=="P", ]

# Crear un campo id a partir de Codigo
Datos_AT_Provincias_2014$id<-Datos_AT_Provincias_2014$Codigo

# ====== Comprobar los resultados ===================> OK!

class(Datos_AT_2014)
## [1] "data.frame"

str(Datos_AT_2014)
# 'data.frame':  71 obs. of  8 variables:
# $ Tipo: Factor w/ 3 levels "A","P","Tipo": 1 1 1 1 1 1 1 1 1 1 ...
# $ Id_mapa_1: Factor w/ 53 levels "01","02","03",..: 10 11 12 13 14 15 16 17 18 ...
# $ AMBITO GEOGRAFICO: Factor w/ 66 levels "ALBACETE","ALICANTE/ALACANT",..: 25 29 30 44 ...
# $ provincia: Factor w/ 66 levels "µvila","Albacete",..: 16 28 29 43 45 46 50 ...
# $ Etiqueta1: Factor w/ 63 levels "albacete","alicante",..: 14 29 30 43 46 47 ...
# $ cod: Factor w/ 63 levels "alba","alic",..: 16 29 30 43 46 47 51 38 ...
# $ INC: num  7 27 24 4 19 26 36 22 39 31 ...
# $ ABS: num  13 48 58 1 19 10 26 21 56 16 ..

summary(Datos_AT_2014)


# -----------------------------------------------------
# Leer los datos en el mapa
# -----------------------------------------------------

# Para ver el mapa
ggplot(data=mapa2, aes(x=long, y=lat, group=group))+
  geom_polygon()

# Unir los datos con el mapa. Atención: el campo común es "id"
mapa.AT_2014 <- merge(mapa2, Datos_AT_Provincias_2014, by.y="id", all.x=TRUE)


# Ver un mapa básico:
# =============================================================================

mapa1<-ggplot(mapa.AT_2014, aes(x=long, y=lat, group=group))+
  geom_polygon(aes(fill= cut(ABS,5)))+
  # geom_text(data=mapa.AT_2014, aes(label=cod)) FALLA
  theme_bw() + scale_fill_brewer("% Absentismo por AT (2014)", palette="PuRd")

# cut(ABS, 5) determina el número de niveles en el mapa


# El mismo mapa, usando geom_map en ves de geom_polygom:
# =============================================================================

mapa2<-ggplot(Datos_AT_Provincias_2014)+
  geom_map(aes(map_id=id, fill=ABS), map=mapa2)+
  expand_limits(x=mapa2$long, y=mapa2$lat)




# Cosas para mirar
# =========================================

# simplify: reducir el numero de coordenadas de los poligonos
# http://stackoverflow.com/questions/20976449/r-simplify-shapefile

# Superponer un mapa del terreno
# http://www.markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/
# http://gis.stackexchange.com/questions/71020/mapping-geocoded-addresses-onto-census-shapefiles-in-r
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/OverviewCoordinateReferenceSystems.pdf


# Separar canarias de la peninsula
# Volverlas a juntar, en otra posición más cercana

